#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: MIT-0

---
- name: deploy application
  hosts: aws_ec2
  vars_files:
    - instance_config.yaml
  collections:
    - amazon.aws.ec2_instance
  tasks:
  - name: copy install_openssl_1_1_1_with_qat_engine.sh
    copy:
      src: ../install_openssl_1_1_1_with_qat_engine.sh
      dest: /home/ec2-user/install_openssl_1_1_1_with_qat_engine.sh
      owner: ec2-user
      group: ec2-user
      mode: 0755
    tags:
      - deploy
  - name: Run OpenSSL installation
    become: yes
    become_user: root
    shell: /home/ec2-user/install_openssl_1_1_1_with_qat_engine.sh > /home/ec2-user/installation.log 2> /home/ec2-user/errors.log
  - name: Generate Self Signed certificates
    shell: |
      export PATH=/opt/openssl/1.1.1e/bin/:$PATH
      echo "PATH=/opt/openssl/1.1.1e/bin/:$PATH" >> /home/ec2-user/.bashrc
      openssl genrsa -out localhost.key 4096
      openssl req -new -key localhost.key -out localhost.csr \
        -subj "/C=NL/ST=Zuid-Holland/L=city/O=amazon/OU=amazon/CN=localhost/emailAddress=random@random.nl" \
        -addext "subjectAltName = DNS:localhost" \
        -sha512 \
        -newhdr \
        -passin pass:123456 \
        -keyform PEM \
        -outform PEM 
      openssl x509 -req -days 365 \
      -in localhost.csr -signkey localhost.key \
      -out localhost.crt \
      -sha512
      openssl pkcs12 -export -out keystore.p12 \
      -inkey localhost.key \
      -in localhost.crt \
      -passout pass:123456
  - name: Build Latest netty-tcnative
    become: yes
    become_user: root
    shell: |
      cd /home/ec2-user
      git clone https://github.com/netty/netty-tcnative.git
      cd ./netty-tcnative
      export OPENSSL_LIBS=ssl:crypto_mb:IPSec_MB:crypto
      export LDFLAGS="-Wl,-rpath=/opt/openssl/1.1.1e/lib -L/opt/openssl/1.1.1e/lib -lssl -lcrypto -lcrypto_mb -lIPSec_MB"
      export CPPFLAGS=-I/opt/openssl/1.1.1e/include
      export LD_LIBRARY_PATH=/opt/openssl/1.1.1e/lib:/opt/crypto_mb/2021.7.1/lib:/opt/ipsec-mb/1.3/lib
      export OPENSSL_DIR=/opt/openssl/1.1.1e
      export PATH=/root/.cargo/bin:/opt/openssl/1.1.1e/bin:/opt/openssl/1.1.1e/bin:/sbin:/bin:/usr/sbin:/usr/bin
      mvn -Dmaven.javadoc.skip=true -Dio.netty.handler.ssl.openssl.engine=qatengine clean install -am -pl openssl-dynamic -DaprArmHome=/usr/local/apr -DopensslArmHome=/opt/openssl/1.1.1e
  - name: copy pom xml
    copy:
      src: ../../pom.xml
      dest: /home/ec2-user/hft-client/pom.xml
      owner: ec2-user
      group: ec2-user
      mode: 0644
    tags:
      - deploy
  - name: Build HFT Client
    become: yes
    become_user: root
    shell: |
      cp -r /opt/crypto_mb/2021.7.1/lib/* /opt/openssl/1.1.1e/lib/
      cp -r /opt/ipsec-mb/1.3/lib/* /opt/openssl/1.1.1e/lib/
      cd /home/ec2-user/hft-client
      mvn clean install
      cp ./target/ExchangeFlow-1.0-SNAPSHOT.jar /home/ec2-user/
  - name: Build Exchange Server
    become: yes
    become_user: root
    shell: |
      [ -f /home/ec2-user/.cargo/env ] && source /home/ec2-user/.cargo/env
      cd /home/ec2-user/mock-trading-server/
      export OPENSSL_DIR=/opt/openssl/1.1.1e
      export OPENSSL_LIBS=ssl:crypto_mb:IPSec_MB:crypto
      export LDFLAGS="-Wl,-rpath=/opt/openssl/1.1.1e/lib -L/opt/openssl/1.1.1e/lib -lssl -lcrypto -lcrypto_mb -lIPSec_MB"
      export CPPFLAGS=-I/opt/openssl/1.1.1e/include
      export LD_LIBRARY_PATH=/opt/openssl/1.1.1e/lib:/opt/crypto_mb/2021.7.1/lib:/opt/ipsec-mb/1.3/lib
      export OPENSSL_DIR=/opt/openssl/1.1.1e
      export PATH=/opt/openssl/1.1.1e/bin:/opt/openssl/1.1.1e/bin:/sbin:/bin:/usr/sbin:/usr/bin:$PATH
      cargo build --release
  - name: copy mock trading server configuration toml file
    copy:
      src: ../../mock-trading-server/configuration.toml
      dest: /home/ec2-user/mock-trading-server/configuration.toml
      owner: ec2-user
      group: ec2-user
  - name: "set to use ssl"
    become: yes
    become_user: root
    replace:
      path: /home/ec2-user/mock-trading-server/configuration.toml
      regexp: '(^use_ssl=)(.*)$'
      replace: 'use_ssl="{{ use_ssl[inventory_hostname] }}"'
      backup: no
  - name: "set use ssl config property"
    become: yes
    become_user: root
    replace:
      path: /home/ec2-user/config.properties
      regexp: '(^USE_SSL=)(.*)$'
      replace: 'USE_SSL={{ use_ssl[inventory_hostname] }}'
      backup: no
